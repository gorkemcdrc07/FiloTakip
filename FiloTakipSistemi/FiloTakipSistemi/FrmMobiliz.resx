<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnSorgula.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>